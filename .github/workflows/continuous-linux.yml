name: Continuous Linux

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: ${{matrix.family}}-${{matrix.compiler}}-${{matrix.buildtype}}
    runs-on: ubuntu-24.04
    environment: CI
    strategy:
      fail-fast: false
      matrix:
        name: [linux-gcc, linux-clang]
        buildtype: [debug, release]
        include:
          - name: linux-gcc
            family: linux
            compiler: gcc
          - name: linux-clang
            family: linux
            compiler: clang
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Clang
        uses: egor-tensin/setup-clang@v1.4
        if: ${{matrix.compiler}} == clang
        with:
          version: latest
          platform: x64

      - name: Ccache for gh actions
        uses: hendrikmuhs/ccache-action@v1.2.13
        with:
          variant: sccache
          key: ${{matrix.family}}-${{matrix.compiler}}-${{matrix.buildtype}}
          max-size: 1000M

      - name: Install dev packages
        run: |
          sudo apt-get install autoconf automake autoconf-archive libtool pkg-config
          sudo apt-get install libegl1-mesa-dev libegl1 libglu1-mesa-dev libxrender-dev libglu1-mesa-dev freeglut3-dev mesa-common-dev
          sudo apt-get install fontconfig '^libxcb.*-dev' libx11-xcb-dev  libxi-dev libxkbcommon-dev libxkbcommon-x11-dev

      - name: get-cmake
        uses: lukka/get-cmake@v3.29.6

      - name: run-vcpkg
        uses: lukka/run-vcpkg@v11

      - name: Run CTest workflow
        run: |
          export PATH=${PATH}:/usr/sbin
          export ORES_BUILD_PROVIDER="github"
          export ORES_BUILD_COMMIT="${GITHUB_SHA}"
          export ORES_BUILD_NUMBER="${GITHUB_RUN_NUMBER}"
          export ORES_BUILD_TIMESTAMP=`date "+%Y/%m/%d %H:%M:%S"`
          export preset=${{matrix.family}}-${{matrix.compiler}}-${{matrix.buildtype}}
          export cmake_args="build_group=Continuous,preset=${preset}"
          if [[ "${{matrix.buildtype}}" == "debug" ]]; then
              cmake_args="${cmake_args},code_coverage=1"
          fi
          ctest -VV --preset ${preset} --script "CTest.cmake,${cmake_args}"
      - name: VCPKG Logs
        if: always()
        run: |
          echo "HERE: autoconf-x64-linux-out.log"
          cat /home/runner/work/OreStudio/OreStudio/vcpkg/buildtrees/libxcrypt/autoconf-x64-linux-out.log
          echo "HERE autoconf-x64-linux-err.log"
          cat /home/runner/work/OreStudio/OreStudio/vcpkg/buildtrees/libxcrypt/autoconf-x64-linux-err.log

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{matrix.family}}-${{matrix.compiler}}-${{matrix.buildtype}}
          path: ./build/output/${{matrix.family}}-${{matrix.compiler}}-${{matrix.buildtype}}/packages/orestudio_0.0.1_amd64.deb
